{"remainingRequest":"C:\\Users\\Xavier\\workspace\\apricity\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Xavier\\workspace\\apricity\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Xavier\\workspace\\apricity\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Xavier\\workspace\\apricity\\src\\components\\tab.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Xavier\\workspace\\apricity\\src\\components\\tab.vue","mtime":1573953476000},{"path":"C:\\Users\\Xavier\\workspace\\apricity\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Xavier\\workspace\\apricity\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Xavier\\workspace\\apricity\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Xavier\\workspace\\apricity\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.number.is-integer\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nexport default {\n  name: 'tab',\n  props: {},\n  data: function data() {\n    return {\n      tableHeader: [\"Value\", \"Count\", \"Average age\"],\n      rows: []\n    };\n  },\n  methods: {\n    // Given an update event received from parent, update the data of the table by requesting in database\n    update: function update(event) {\n      var _this = this;\n\n      var varid = encodeURI(event.value);\n      var req = \"http://localhost:3000/api/getData/\" + varid;\n      axios.get(req).then(function (response) {\n        _this.rows = response.data;\n      }).catch(function (e) {\n        _this.rows = [];\n        console.log(\"combobox.vue : initTab - Error during tab initalize\");\n      });\n    },\n    // Format data with no decimals if number\n    formatData: function formatData(value) {\n      var v = \"\";\n\n      if (typeof value == \"number\") {\n        var decimals = 0;\n\n        if (Number.isInteger(value) == false) {\n          decimals = 1;\n        }\n\n        var val = value.toFixed(decimals);\n        v = val.toString();\n      } else {\n        v = value;\n      }\n\n      return v;\n    }\n  }\n};",{"version":3,"sources":["tab.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAiBA,OAAA,KAAA,MAAA,OAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,KADA;AAEA,EAAA,KAAA,EAAA,EAFA;AAIA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,WAAA,EAAA,CAAA,OAAA,EAAA,OAAA,EAAA,aAAA,CADA;AAEA,MAAA,IAAA,EAAA;AAFA,KAAA;AAIA,GATA;AAUA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,MAAA,EAAA,gBAAA,KAAA,EAAA;AAAA;;AACA,UAAA,KAAA,GAAA,SAAA,CAAA,KAAA,CAAA,KAAA,CAAA;AACA,UAAA,GAAA,GAAA,uCAAA,KAAA;AACA,MAAA,KAAA,CAAA,GAAA,CAAA,GAAA,EACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,QAAA,KAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA;AACA,OAHA,EAIA,KAJA,CAIA,UAAA,CAAA,EAAA;AACA,QAAA,KAAA,CAAA,IAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,qDAAA;AACA,OAPA;AAQA,KAbA;AAcA;AACA,IAAA,UAfA,sBAeA,KAfA,EAeA;AACA,UAAA,CAAA,GAAA,EAAA;;AACA,UAAA,OAAA,KAAA,IAAA,QAAA,EACA;AACA,YAAA,QAAA,GAAA,CAAA;;AACA,YAAA,MAAA,CAAA,SAAA,CAAA,KAAA,KAAA,KAAA,EACA;AACA,UAAA,QAAA,GAAA,CAAA;AACA;;AACA,YAAA,GAAA,GAAA,KAAA,CAAA,OAAA,CAAA,QAAA,CAAA;AACA,QAAA,CAAA,GAAA,GAAA,CAAA,QAAA,EAAA;AAEA,OAVA,MAYA;AACA,QAAA,CAAA,GAAA,KAAA;AACA;;AACA,aAAA,CAAA;AACA;AAjCA;AAVA,CAAA","sourcesContent":["<template>\r\n  <div id=\"myTab\" v-if=\"rows.length\" >\r\n    <table border=1>\r\n      <thead>\r\n        <tr>\r\n          <th v-for=\"header in tableHeader\">{{header}}</th>\r\n        </tr>\r\n      </thead>\r\n       <tr v-for=\"row in rows\">\r\n          <td v-for=\"(column,idx) in row\">{{ formatData(row[idx]) }}</td>\r\n      </tr>  \r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport axios from 'axios'; \r\nexport default {\r\n  name: 'tab',\r\n  props: {\r\n  },\r\n  data: function (){\r\n    return {\r\n      tableHeader : [\"Value\",\"Count\",\"Average age\"],\r\n      rows:[]\r\n    };\r\n  },\r\n  methods: {\r\n    // Given an update event received from parent, update the data of the table by requesting in database\r\n    update : function( event ){\r\n      var varid = encodeURI(event.value);\r\n      var req = \"http://localhost:3000/api/getData/\" + varid;\r\n      axios.get(req)\r\n      .then(response => {\r\n        this.rows = response.data;\r\n      })\r\n      .catch(e => {\r\n        this.rows = [];\r\n        console.log(\"combobox.vue : initTab - Error during tab initalize\");\r\n      })    \r\n    },\r\n    // Format data with no decimals if number\r\n    formatData(value) {\r\n      let v = \"\";\r\n      if (typeof(value) == \"number\")\r\n      {\r\n        let decimals = 0;\r\n        if (Number.isInteger(value) == false)\r\n        {\r\n          decimals = 1;\r\n        }\r\n        let val = value.toFixed(decimals);\r\n        v = val.toString();\r\n\r\n      }\r\n      else\r\n      {\r\n        v = value;\r\n      }\r\n      return v;\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n<style>\r\n#myTab {\r\n  display: inline-block;\r\n  margin-top: 30px;\r\n}\r\n</style>"],"sourceRoot":"src/components"}]}